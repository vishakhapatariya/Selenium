<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="5" total="14" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-11-23T12:25:33 IST" name="Suite" finished-at="2023-11-23T12:25:34 IST" duration-ms="132">
    <groups>
      <group name="smoke">
        <method signature="Demo2.test2()[pri:0, instance:test.Demo2@7ea9e1e2]" name="test2" class="test.Demo2"/>
        <method signature="Demo3.webSignInCarLoan()[pri:0, instance:test.Demo3@2ea41516]" name="webSignInCarLoan" class="test.Demo3"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2023-11-23T12:25:33 IST" name="Test" finished-at="2023-11-23T12:25:34 IST" duration-ms="39">
      <class name="test.Demo2">
        <test-method signature="test2()[pri:0, instance:test.Demo2@7ea9e1e2]" started-at="2023-11-23T12:25:34 IST" name="test2" finished-at="2023-11-23T12:25:34 IST" duration-ms="7" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Demo2.test2(Demo2.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterEveryMethod()[pri:0, instance:test.Demo2@7ea9e1e2]" started-at="2023-11-23T12:25:34 IST" name="afterEveryMethod" finished-at="2023-11-23T12:25:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEveryMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test.Demo2@7ea9e1e2]" started-at="2023-11-23T12:25:34 IST" name="afterClass" finished-at="2023-11-23T12:25:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="lastExecution()[pri:0, instance:test.Demo2@7ea9e1e2]" started-at="2023-11-23T12:25:34 IST" name="lastExecution" finished-at="2023-11-23T12:25:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExecution -->
      </class> <!-- test.Demo2 -->
      <class name="test.Demo1">
        <test-method is-config="true" signature="firstExecution()[pri:0, instance:test.Demo1@3e84448c]" started-at="2023-11-23T12:25:33 IST" name="firstExecution" finished-at="2023-11-23T12:25:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstExecution -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.Demo1@3e84448c]" started-at="2023-11-23T12:25:34 IST" name="beforeClass" finished-at="2023-11-23T12:25:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:test.Demo1@3e84448c]" started-at="2023-11-23T12:25:34 IST" name="beforeEveryMethod" finished-at="2023-11-23T12:25:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method signature="test1(java.lang.String,java.lang.String)[pri:0, instance:test.Demo1@3e84448c]" started-at="2023-11-23T12:25:34 IST" name="test1" finished-at="2023-11-23T12:25:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- test.Demo1 -->
    </test> <!-- Test -->
    <test started-at="2023-11-23T12:25:34 IST" name="Car Loan" finished-at="2023-11-23T12:25:34 IST" duration-ms="18">
      <class name="test.Demo4">
        <test-method signature="loginAPIHomeLoan()[pri:0, instance:test.Demo4@3a44431a]" started-at="2023-11-23T12:25:34 IST" name="loginAPIHomeLoan" finished-at="2023-11-23T12:25:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAPIHomeLoan -->
      </class> <!-- test.Demo4 -->
      <class name="test.Demo3">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:test.Demo3@2ea41516]" started-at="2023-11-23T12:25:33 IST" name="beforeSuite" finished-at="2023-11-23T12:25:33 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method signature="loginAPICarLoan()[pri:0, instance:test.Demo3@2ea41516]" started-at="2023-11-23T12:25:34 IST" name="loginAPICarLoan" finished-at="2023-11-23T12:25:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAPICarLoan -->
        <test-method signature="webSignInCarLoan()[pri:0, instance:test.Demo3@2ea41516]" started-at="2023-11-23T12:25:34 IST" name="webSignInCarLoan" finished-at="2023-11-23T12:25:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webSignInCarLoan -->
        <test-method signature="xsignInAPICarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Demo3@2ea41516]" started-at="2023-11-23T12:25:34 IST" name="xsignInAPICarLoan" data-provider="getData" finished-at="2023-11-23T12:25:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsignInAPICarLoan -->
        <test-method signature="xsignInAPICarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Demo3@2ea41516]" started-at="2023-11-23T12:25:34 IST" name="xsignInAPICarLoan" data-provider="getData" finished-at="2023-11-23T12:25:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsignInAPICarLoan -->
        <test-method signature="xsignInAPICarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Demo3@2ea41516]" started-at="2023-11-23T12:25:34 IST" name="xsignInAPICarLoan" data-provider="getData" finished-at="2023-11-23T12:25:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xsignInAPICarLoan -->
        <test-method signature="webLoginCarLoan(java.lang.String)[pri:0, instance:test.Demo3@2ea41516]" started-at="2023-11-23T12:25:34 IST" name="webLoginCarLoan" finished-at="2023-11-23T12:25:34 IST" depends-on-methods="test.Demo3.loginAPICarLoan, test.Demo3.xsignInAPICarLoan" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[google.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginCarLoan -->
      </class> <!-- test.Demo3 -->
      <class name="test.Demo1">
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:test.Demo1@3e84448c]" started-at="2023-11-23T12:25:34 IST" name="afterSuite" finished-at="2023-11-23T12:25:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- test.Demo1 -->
    </test> <!-- Car Loan -->
  </suite> <!-- Suite -->
</testng-results>
